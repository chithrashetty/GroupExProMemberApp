document.addEventListener('deviceready', onDeviceReady, false);

var email = localStorage["email"];
var hash = localStorage["hash"];
var newApp = true;
var account=localStorage["account"];
var cat=localStorage["cat"];
var loc=localStorage["loc"];
var externalFiles = false;

/* Gets the BaseUrl according to values in 'env.json' and 'config.json'.
 * The 'env.json' file is used for Cordova to write the desired environment name.
 * Users may also manually edit the 'env.json' file for local testing.
 * The 'config.json' file stores the base url's for all environments, and the
 * selection is chosen according to the value found in 'env.json'.
 */
function getBaseUrl() {

	let request = new XMLHttpRequest();

	// Parse JSON and get environment name from 'env.json' file
	// Note - 'env.json' file is auto-generated by Cordova build process
	request.open('GET', './config/env.json', false);
	request.send(null);
	let env = JSON.parse(request.responseText)["env"];
	if (env === undefined || env === null) {
		console.log("getBaseUrl | Could not find a value for the key 'env'");
		return String.empty;
	}

	// Parse JSON and get baseUrl according to environment name
	request.open('GET', './config/config.json', false);
	request.send(null);
	let json = JSON.parse(request.responseText);
	if (json === undefined || json === null) {
		console.log("getBaseUrl | Could not import config.json file");
		return String.empty;
	}

	// Get the URL based on the provided 'env' key
	let url = String();
	try {
		url = json[env]["baseUrl"];
	}
	catch (err) {
		console.log("Could not get baseUrl for provided key: " + env);
		console.log(err);
		return String.empty;
	}

	if (url === undefined || url === null) {
			console.log("An error occurred while trying to get the BaseUrl. No url found matching the provided key: " + env);
			return String.empty;
	}

	console.log("Environment BaseUrl: " + url);
	return url;
}

let baseUrl = getBaseUrl();

function onDeviceReady() {

	startApp();
	
}

function startApp() {



}
